apiVersion: apps/v1
kind: Deployment
metadata:
  name: gs-algorithm
spec:
  selector:
    matchLabels:
      app: gs-algorithm
  template:
    metadata:
      labels:
        app: gs-algorithm
    spec:
      serviceAccountName: scaler-service-account
      containers:
        - name: gs-algorithm
          image: giovaz94/cgs-teastore
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: INCLUSTER_CONFIG
              value: "true"
            - name: K_BIG
              value: "10"
            - name:  SLEEP
              value: "20"
            - name: K
              value: "5"
            - name: ERROR_LIMIT
              value: "3"
            - name: PROACTIVE
              value: "false"
            - name: PROACTIVE_REACTIVE
              value: "false"
            - name: PROMETHEUS_SERVICE_ADDRESS
              value: "prometheus-service.monitoring.svc.cluster.local"
            - name: PROMETHEUS_SERVICE_PORT
              value: "8080"
            - name: MONITOR_ONLY
              value: "false"
            - name: FOLDER_PATH
              value: "/app/my_files"
            - name: SYSTEM_BASE_CONFIGURATION
              value: 1,1,1,1,2 
            - name: MICROSERVICES_MCL
              value: 150,905,190,5000,600
            - name: MICROSERVICES_MF
              value: "1,4,1,3,6"
            - name: INCREMENT_1
              value: "2,1,1,0,2"
            - name: INCREMENT_2
              value: "1,1,1,0,2"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: gs-algorithm-service
spec:
  selector:
    app: gs-algorithm
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scaler-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-creator
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs: ["create", "get", "list", "delete", "watch", "patch", "update"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale"]
    verbs: ["get", "list", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-creator-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: scaler-service-account
roleRef:
  kind: Role
  name: pod-creator
  apiGroup: rbac.authorization.k8s.io